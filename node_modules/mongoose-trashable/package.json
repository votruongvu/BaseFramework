{
  "name": "mongoose-trashable",
  "description": "a mongoose plugin adding ablity to model instance to be trashed (soft deleted) / untrashed",
  "version": "0.1.1",
  "homepage": "https://github.com/yi/mongoose-trashable",
  "author": {
    "name": "yi",
    "email": "yi2004@gmail.com",
    "url": "https://github.com/yi/"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:yi/mongoose-trashable.git"
  },
  "bugs": {
    "url": "https://github.com/yi/mongoose-trashable/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/yi/mongoose-trashable/blob/master/LICENSE-MIT"
    }
  ],
  "main": "lib/mongoose-trashable",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "watch": "coffee -o ./lib/ -cw ./src/",
    "test": "mocha test"
  },
  "devDependencies": {
    "chai": ">=1.2.0",
    "mocha": ">=1.3.2",
    "mongoose": "latest",
    "should": ">=1.1.0"
  },
  "keywords": [
    "mongoose",
    "mongodb",
    "model",
    "trash",
    "delete"
  ],
  "readme": "# mongoose-trashable\n\na mongoose plugin adding ablity to model instance to be trashed (soft deleted) / untrashed\n\nadding following instance method to mongoose model:\n * trash() : mark an instance object as trashed\n * untrash() : recover a trashed object\n\n## Install\nInstall the module with:\n\n```bash\nnpm install mongoose-trashable\n```\n\n## Usage\n```javascript\nvar trashable = require('mongoose-trashable');\n\nvar TestSchema = new Schema({});\n\nTestSchema.plugin(transable);\n\nTestModel = mongoose.model(\"Test\", TestSchema);\n\ninstance = new TestModel()\ninstance.trash(function(err, doc) {\n    console.log(\"after trashed_at: doc.trashed_at:\"+doc.trashed_at);\n    doc.untrashed(function(err, doc){\n      console.log(\"after untrashed: doc.trashed_at:\"+doc.trashed_at);\n    });\n});\n\n```\n\n## License\nCopyright (c) 2014 yi\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "mongoose-trashable@0.1.1",
  "_from": "mongoose-trashable@~0.1.1"
}
